#!/usr/bin/env bash

set -e
source scripts/package-lib

usage="$0 [OPTION]... RECIPESDIR WORKDIR [REMOTEREPO]

Build new or updated packages defined in RECIPESDIR and create a package index.
The WORKDIR must be a non-existent directory in which the builds are performed.
If REMOTEREPO is omitted 'https://toltec.delab.re/testing' is used.

Options:

    -h              Show this help message.
    -f              Force building all the packages, even those for which
                    an already built version exists on the remote."

helpflag=

while getopts hf name; do
    case $name in
        h) helpflag=1 ;;
        *) error "Invalid option. Use the -h flag for more information." ;;
    esac
done

shift $((OPTIND - 1))

if [[ -n $helpflag ]]; then
    echo "$usage"
    exit
fi

if [[ $# -eq 0 ]]; then
    error "Missing RECIPESDIR and WORKDIR arguments. Use the -h flag for more information."
fi

if [[ $# -eq 1 ]]; then
    error "Missing WORKDIR argument. Use the -h flag for more information."
fi

if [[ $# -gt 2 ]]; then
    error "Extraneous arguments. Use the -h flag for more information."
fi

recipesdir="$1"
workdir="$2"

pkgsworkdir="$workdir"/
mkdir -p "$pkgsworkdir"

cat > "${pkgsworkdir}/index.html" << WEBS
<html>
<head>
<style>
  body {
    font-family: monospace;
    background-color: #f8fcf8;
  }
  table {
    width: 100%;
  }
  table td {
    padding: 0 20px;
  }
  table tr:nth-child(even) {
    background-color: #dcdfdc;
  }

  table thead {
    border-bottom: 1px dotted gray;
  }

  table th {
    text-align: left;
    padding-left: 20px;
  }
</style>
</head>

<body>

<a href="../">Back to Repository Home Page</a>

<h1>Toltec Package Listing</h1>
<table>

<thead> <th>Name</th> <th>Description</th> <th>Version</th> <th>Category</th> <th>License</th> </thead>
WEBS

# Build packages index
section "Making packages index", "${pkgsworkdir}/index.html"

# Build each package or get it from the remote server
for recipedir in "$recipesdir"/*; do
    (
        load-recipe "$recipedir"

        section "Adding table entry for $pkgname $pkgver"

        pkgworkdir="$pkgsworkdir"/"$pkgname"
        if [ -z "${url}" ]; then
          href="${url}";
        else
          href="<a target='_new' href='${url}'>${pkgname}</a>"
        fi

cat >> "${workdir}/index.html" <<WEBS
<tr>
  <td>
    ${href}
  </td>
  <td>${pkgdesc}</td>
  <td>${pkgver}</td>
  <td>${section}</td>
  <td>${license}</td>
</tr>
WEBS
    )

done

cat >> "${pkgsworkdir}/index.html" << WEBS
</table>
</body>
</html>
WEBS
section "Done. Result is in ${pkgsworkdir}"
