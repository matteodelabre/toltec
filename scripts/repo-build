#!/usr/bin/env bash

set -e
source scripts/package-lib

usage="$0 [OPTION]... RECIPESDIR WORKDIR [REMOTEREPO]

Build new or updated packages defined in RECIPESDIR and create a package index.
The WORKDIR must be a non-existent directory in which the builds are performed.
If REMOTEREPO is omitted 'https://toltec.delab.re/testing' is used.

Options:

    -h              Show this help message.
    -f              Force building all the packages, even those for which
                    an already built version exists on the remote."

helpflag=
forceflag=

while getopts hf name; do
    case $name in
        h) helpflag=1 ;;
        f) forceflag=1 ;;
        *) error "Invalid option. Use the -h flag for more information." ;;
    esac
done

shift $((OPTIND - 1))

if [[ -n $helpflag ]]; then
    echo "$usage"
    exit
fi

if [[ $# -eq 0 ]]; then
    error "Missing RECIPESDIR and WORKDIR arguments. Use the -h flag for more information."
fi

if [[ $# -eq 1 ]]; then
    error "Missing WORKDIR argument. Use the -h flag for more information."
fi

remoterepo="https://toltec.delab.re/testing"

if [[ $# -eq 3 ]]; then
    remoterepo="$3"
fi

if [[ $# -gt 3 ]]; then
    error "Extraneous arguments. Use the -h flag for more information."
fi

recipesdir="$1"
workdir="$2"

pkgsworkdir="$workdir"/packages
mkdir -p "$pkgsworkdir"

repodir="$workdir"/repo

[[ -d $repodir ]] && files="$(ls -qA -- "$repodir")" && [[ -n $files ]] \
    && error "Repository directory '$repodir' exists and is not empty"
mkdir -p "$repodir"

# Build each package or get it from the remote server
# Each recipe is loaded in a subshell to avoid leaking metadata fields
for recipedir in "$recipesdir"/*; do
    (
        load-recipe "$recipedir"
        arname="$(archive-name)"
        section "Building $pkgname $pkgver"

        if [[ -n $forceflag ]] || ! curlcheck --remote-time "$remoterepo"/"$arname" -o "$repodir"/"$arname"; then
            pkgworkdir="$pkgsworkdir"/"$pkgname"
            "${BASH_SOURCE%/*}"/package-build "$recipedir" "$pkgworkdir"
            mv "$pkgworkdir"/*.ipk "$repodir"
        else
            status "Reusing already built version from $remoterepo"
        fi
    )
done

# Build packages index
section "Making packages index"
"${BASH_SOURCE%/*}"/opkg/opkg-make-index --checksum sha256 -p "$repodir"/Packages "$repodir"

# Set atime and mtime to the date of latest commit for the packages index
lastcommitdate="$(git log -1 --pretty=%ct)"
touch --no-dereference --date="@$lastcommitdate" \
    "$repodir"/Packages \
    "$repodir"/Packages.gz \
    "$repodir"/Packages.stamps

section "Done. Result is in $repodir"
