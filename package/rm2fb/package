#!/usr/bin/env bash
# Copyright (c) 2021 The Toltec Contributors
# SPDX-License-Identifier: MIT

pkgnames=(rm2fb)
timestamp=2021-02-21T01:41+00:00
maintainer="raisjn <of.raisjn@gmail.com>"
license=MIT
pkgdesc="Interface to the reMarkable 2 framebuffer"
url="https://github.com/ddvk/remarkable2-framebuffer"
pkgver=1.0.1-1
section="devel"

image=qt:v1.1
source=(
    https://github.com/ddvk/remarkable2-framebuffer/archive/aa70ce37c71f84b91434f5c469fa71f4b1bb328c.zip
    rm2fb.conf
    rm2fb.service
    rm2fb-server
    rm2fb-client
)
sha256sums=(
    76f1c0b72260a9743f3e008100ffddf1f89cd44c6f0376d906e98ae66eaea716
    SKIP
    SKIP
    SKIP
    SKIP
)

build() {
    qmake
    make
}

package() {
    mkdir -p "$pkgdir"/opt/lib "$pkgdir"/opt/etc "$pkgdir"/opt/bin
    install -D -m 755 "$srcdir/src/client/librm2fb_client.so.${pkgver%-*}" "$pkgdir"/opt/lib/
    ln -s "librm2fb_client.so.${pkgver%-*}" "$pkgdir/opt/lib/librm2fb_client.so.${pkgver%.*.*-*}"
    install -D -m 755 "$srcdir/src/server/librm2fb_server.so.${pkgver%-*}" "$pkgdir"/opt/lib/
    ln -s "librm2fb_server.so.${pkgver%-*}" "$pkgdir/opt/lib/librm2fb_server.so.${pkgver%.*.*-*}"
    install -D -m 755 "$srcdir"/rm2fb-server "$pkgdir"/opt/bin/
    install -D -m 755 "$srcdir"/rm2fb-client "$pkgdir"/opt/bin/
    install -D -m 644 "$srcdir"/rm2fb.conf "$pkgdir"/etc/systemd/system.conf.d/01-rm2fb.conf
    install -D -m 644 "$srcdir"/rm2fb.service "$pkgdir"/lib/systemd/system/rm2fb.service
}

configure() {
    systemctl daemon-reload
    systemctl enable rm2fb --now
    # Restart xochitl if it's running
    if systemctl --quiet is-active xochitl; then
        # Reset the crash count so we don't trigger remarkable-fail
        echo "0" > /tmp/crashnum
        systemctl restart xochitl
    fi
}

preremove() {
    if systemctl list-units --full -all | grep -Fq 'rm2fb.service'; then
        systemctl disable rm2fb --now
    fi
    echo -n "make sure "
    if ! is-enabled xochitl.service; then
        echo "to re-enable xochitl with 'systemctl enable xochitl --now'"
        echo -n "and "
    fi
    echo "to disable / uninstall any launchers like draft, oxide or remux before"
    echo "rebooting your tablet to complete the uninstallation"
}
