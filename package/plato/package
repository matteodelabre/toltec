#!/usr/bin/env bash
# Copyright (c) 2021 The Toltec Contributors
# SPDX-License-Identifier: MIT

pkgnames=(plato)
pkgdesc="Document reader"
url=https://github.com/LinusCDE/plato
pkgver=0.9.16-1
timestamp=2021-04-19T23:53Z
section="readers"
maintainer="Linus K. <linus@cosmos-ink.net>"
license=AGPL-3.0-or-later
installdepends=(display jq)
makedepends=(build:jq build:unzip build:wget)
flags=(patch_rm2fb)

image=rust:v1.6
source=("https://github.com/LinusCDE/plato/archive/${pkgver%-*}-rm-release-8.zip")
sha256sums=(e741c18ed055bbaebdc06a32216784a59c8c976a8fa2b97dbe1ed6dc39bd8078)

build() {
    # Fall back to system-wide config
    rm .cargo/config

    # 'cargo pkgid' seems to output something different with most
    # recent nightly builds. This adjusts the filtering.
    sed -i "s/version=.*$/version=\'$(cargo pkgid | cut -d "#" -f 2 | cut -d ":" -f 2)\'/g" download.sh

    # Use our toolchain
    export AR=arm-linux-gnueabihf-ar
    export CC=arm-linux-gnueabihf-gcc
    export STRIP=arm-linux-gnueabihf-strip
    sed -i '/source \/usr\/local\/oecore-x86_64/d' src/mupdf_wrapper/build-kobo.sh

    # Compile all to dist/
    ./clean.sh
    ./build.sh
    ./dist.sh
}

package() {
    # Install plato data in /opt/lib/plato
    install -d "$pkgdir"/opt/lib
    cp -r "$srcdir"/dist "$pkgdir"/opt/lib/plato

    # Link /opt/bin/plato to /opt/lib/plato/plato.sh
    install -d "$pkgdir"/opt/bin
    ln -s /opt/lib/plato/plato.sh "$pkgdir"/opt/bin/plato

    # Link media dir to /home/root/plato-media
    rmdir "$pkgdir"/opt/lib/plato/media
    ln -s /home/root/plato-media "$pkgdir"/opt/lib/plato/media

    # Link Settings.toml to /opt/etc/plato.toml
    install -d "$pkgdir"/opt/etc
    ln -s /opt/etc/plato.toml "$pkgdir"/opt/lib/plato/Settings.toml

    install -D -m 644 "$srcdir"/oxide "$pkgdir"/opt/etc/draft/plato.draft
    install -D -m 644 "$srcdir"/oxide-icon.png "$pkgdir"/opt/etc/draft/icons/plato.png
}

configure() {
    local mediadir=/home/root/plato-media

    if [ ! -d $mediadir ]; then
        # This directory should not be tracked by opkg
        # so that its contents are kept after removing
        mkdir $mediadir
        echo ""
        echo "Place your media files for plato in '$mediadir'"
        echo ""
    else
        # Fix breaking change introduced in version 0.9.14
        # https://github.com/baskerville/plato/releases/tag/0.9.14

        local metadata_file=$mediadir/.metadata.json
        local metadata_file_old=$mediadir/.metadata-old.json

        local max_key_len=$(cat $metadata_file | jq --raw-output 'keys[]' | wc -L)
        if [ $max_key_len -gt 16 ] && [ ! -e $metadata_file_old ]; then

            echo 'Plato 0.9.14 changed the format of metadata files.'
            echo 'Your metadata file was found and determined to be outdated!'
            echo 'Automatically updating the file...'

            # Routine is based on baskerville's migrate-hex_keys.py (from the release page)
            # Rewritten in bash to only require jq rather than python.
            mv $metadata_file $metadata_file_old
            local change_cmds=""
            local del_list=""
            for key in $(jq --raw-output 'keys[]' < $metadata_file_old); do
                hex_key=$(printf %016X $key)
                #echo "Key: $key --> $hex_key"

                [ -z "$del_list" ] || del_list="${del_list}, "
                [ -z "$change_cmds" ] || change_cmds="${change_cmds} | "
                del_list="${del_list}.[\"${key}\"]"
                change_cmds="${change_cmds}.[\"$hex_key\"] = .[\"$key\"]"
            done

            # Create updated json file
            jq "$change_cmds | del($del_list)" < $metadata_file_old > $metadata_file
            echo 'Metadata file was updated! The old one was renamed to ".metadata-old.json".'

        elif [ $max_key_len -gt 16 ] &&  [ -e $metadata_file_old ]; then
            echo 'MANUAL INTERVENTION REQUIRED!!!'
            echo 'Plato 0.9.14 changed the format of metadata files.'
            echo 'Your metadata file not found but may be outdated!'
            echo 'Since the file could not be found, you should update it yourself!'
            echo 'Please launch plato only after this was done! See'
            echo 'https://github.com/baskerville/plato/releases/tag/0.9.14 for how to do it.'
        elif [ ! -e $metadata_file ]; then
            echo 'Plato 0.9.14 changed the format of metadata files!'
            echo 'If you already have a library in some non-standard location, please migrate it! See'
            echo 'https://github.com/baskerville/plato/releases/tag/0.9.14 for more.'
        fi
    fi
}
